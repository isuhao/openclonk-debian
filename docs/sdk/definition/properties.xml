<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE doc
  SYSTEM '../../clonk.dtd'>
<?xml-stylesheet type="text/xsl" href="../../clonk.xsl"?>
<doc>
  <title>Properties</title>
  <h>Properties</h>
  <part>
    <text>Every object has a number of properties that are handled by the engine. Typically, these are inherited from the object's Prototype, an <emlink href="definition/index.html#Objektdefinitionen">Object Definition</emlink>. A Property of an Object Definition is defined with the <code>local</code> keyword in the <emlink href="definition/script.html#Objektscripte">Definition's script</emlink>:</text>
    <code>local Name = "$Name$";
local ActMap = {
Stand = {
	Prototype = Action,
        Name = "Stand",
        Length = 1,
        NextAction = "Stand"
},
};
</code>
    <text>
      <table>
        <caption id="PropertiesTable">Object Properties</caption>
        <rowh>
          <col>Name</col>
          <col>Data type</col>
          <col>Description</col>
        </rowh>
        <row>
          <col><code>Prototype</code></col>
          <col>proplist</col>
          <col></col>
        </row>
        <row>
          <col><code>Name</code></col>
          <col>string</col>
          <col></col>
        </row>
        <row>
          <col><code>Collectible</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>Touchable</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>ActMap</code></col>
          <col>proplist</col>
          <col></col>
        </row>
        <row>
          <col><code>Visibility</code></col>
          <col>int/array</col>
          <col>Controls the visibility of the object. See the <emlink href="definition/visibility.html">detailed documentation of possible values</emlink>.</col>
        </row>
        <row>
          <col><code>LineColors</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>LineAttach</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>PictureTransformation</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>MeshTransformation</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>MouseDragImage</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>MouseDrag</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>Animation</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>Action</code></col>
          <col>proplist</col>
          <col></col>
        </row>
        <row>
          <col><code>BreatheWater</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>CorrosionResist</code></col>
          <col></col>
          <col></col>
        </row>
        <row>
          <col><code>MaxEnergy</code></col>
          <col>int</col>
          <col></col>
        </row>
        <row>
          <col><code>MaxBreath</code></col>
          <col>int</col>
          <col></col>
        </row>
        <row>
          <col><code>ThrowSpeed</code></col>
          <col>int</col>
          <col></col>
        </row>
        <row id="Parallaxity">
          <col><code>Parallaxity</code></col>
          <col>[int, int]</col>
          <col>The Objects's major Z-Position. See <funclink>C4D_Parallax</funclink>.</col>
        </row>
        <row id="Plane">
          <col><code>Plane</code></col>
          <col>int</col>
          <col>The Object's minor Z-Position. Negative values are behind the landscape, positive values before it. Use 1-399 for stuff behind Clonks, 401-999 for stuff before Clonks, and 1000+ for GUI objects.</col>
        </row>
		<row>
          <literal_col>Placement</literal_col>
          <col>Integer</col>
          <col>Placement: 0 land surface, 1 in liquid, 2 in mid-air, 3 underground, 4 land surface and underground.</col>
        </row>
		<row>
          <literal_col>BlastIncinerate</literal_col>
          <col>Integer</col>
          <col>Incineration by explosion: 0 none, otherwise the damage level of incineration.</col>
        </row>
		<row>
          <literal_col>BurnTo</literal_col>
          <col>C4ID</col>
          <col>Definition change upon incineration.</col>
        </row>
		<row>
          <literal_col>NoBurnDecay</literal_col>
          <col>Integer</col>
          <col>0 or 1. If 1, the object does not decompose if burning.</col>
        </row>
		<row>
          <literal_col>ContactIncinerate</literal_col>
          <col>Integer</col>
          <col>Probability of incineration by contact: 0 none, or 1 (high) to 5 (low).</col>
        </row>
      </table>
    </text>
  </part>
  <author>GÃ¼nther</author><date>2011</date>
</doc>
