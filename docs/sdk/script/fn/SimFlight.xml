<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE funcs
  SYSTEM '../../../clonk.dtd'>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<funcs>
  <func>
    <title>SimFlight</title>
    <category>Objects</category>
    <subcat>Movement</subcat>
    <version>4.9.5.0 CE</version>
    <syntax>
      <rtype>bool</rtype>
      <params>
        <param>
          <type>int &amp;</type>
          <name>x</name>
          <desc>X coordinate of the starting position. Always global.</desc>
        </param>
        <param>
          <type>int &amp;</type>
          <name>y</name>
          <desc>Y coordinate of the starting position. Always global.</desc>
        </param>
        <param>
          <type>int &amp;</type>
          <name>xdir</name>
          <desc>Initial horizontal speed.</desc>
        </param>
        <param>
          <type>int &amp;</type>
          <name>ydir</name>
          <desc>Initial vertical speed.</desc>
        </param>
        <param>
          <type>int</type>
          <name>min_density</name>
          <desc>Mininum density of the material which will stop the projected trajectory. If not specified or 0 this will default to value 50 (solid material).</desc>
          <optional />
        </param>
        <param>
          <type>int</type>
          <name>max_density</name>
          <desc>Maximum density of the material which will stop the projected trajectory. If not specified or 0 this will default to value 50 (solid material).</desc>
          <optional />
        </param>
        <param>
          <type>int</type>
          <name>iterations</name>
          <desc>Number of simulated frames for which the projection runs. If not specified or 0 the simultion will run indefinitely until material or the limits of the landscape are encountered.</desc>
          <optional />
        </param>
        <param>
          <type>int</type>
          <name>precision</name>
          <desc>Precision. Default 10 if not specified or 0.</desc>
          <optional />
        </param>
      </params>
    </syntax>
    <desc>Simulates the motion of a falling object with a given starting position and initial speed. If the projected trajectory encounters a material of the specified density, the simulation will stop and the function will return 'true'. Otherwise the function will return 'false'. <br/> If the return value is 'true', the x and y coordinates of the point of interception will be stored in the specified variables for x and y, the horizontal and vertical speed at the time of interception in xdir and ydir respectively. See <emlink href="script/Funcs.html#referenzen">references</emlink> for details.</desc>
    <examples>
      <example>
        <code>var x = <funclink>GetX</funclink>(), y = <funclink>GetY</funclink>(), xdir = <funclink>GetXDir</funclink>(), ydir = <funclink>GetYDir</funclink>();
if (<funclink>GetAction</funclink>()eq&quot;Jump&quot;)
  if (SimFlight(x, y, xdir, ydir))
    if (ydir &gt;= 80)
      <funclink>Message</funclink>(&quot;Oh oh, das wird ein harter Aufprall!&quot;);</code>
        <text>If the calling clonk is situated in mid-air and it appears that he will hit the ground at high speed, he will call out.</text>
      </example>
    </examples>
  </func>
  <author>Newton</author><date>2004-03</date>
</funcs>
