<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE funcs
  SYSTEM '../../../clonk.dtd'>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<funcs>
  <func>
    <title>ChangeEffect</title>
    <category>Effects</category>
    <version>4.9.5.0 CE</version>
    <syntax>
      <rtype>bool</rtype>
      <params>
        <param>
          <type>string</type>
          <name>name</name>
          <desc>Name of the effect without preceding 'Fx'. You can use '*' and '?' wildcards.</desc>
          <optional />
        </param>
        <param>
          <type>object</type>
          <name>target</name>
          <desc>Targt object in which to change effects. With 0, the global effects are processed.</desc>
          <optional />
        </param>
        <param>
          <type>int</type>
          <name>index</name>
          <desc>Effect index. If name is given then if there are more effects matching the search mask the one with the given index is refered to. If name is not given then the effect with the correspoding effect number will be changed. For indices it is guaranteed that, in contrast to effect numbers, they start at 0 and count up to the number of effects</desc>
          <optional />
        </param>
        <param>
          <type>string</type>
          <name>new_name</name>
          <optional />
          <desc>New effect name without prepended 'Fx'.</desc>
        </param>
        <param>
          <type>int</type>
          <name>new_timer</name>
          <optional />
          <desc>New timer interval. If -1, the previous value will be kept. Otherwise, this call will also reset effect time.</desc>
        </param>
      </params>
    </syntax>
    <desc>Changes the name of an effect. This also affects the names of the related callback functions.</desc>
    <examples>
      <example>
        <code>ChangeEffect(&quot;MeinEffekt&quot;, 0, 0, &quot;AndererEffekt&quot;);</code>
        <text>Renames the global effect "MyEffect" (if it exists) to "OtherEffect".</text>
      </example>
      <example>
        <code>var obj, i, effect;
<funclink>while</funclink> ((i=0) || obj=<funclink>FindObject</funclink>(0, 0,0,0,0, 0, 0,0, 0, obj))
  <funclink>while</funclink> (effect = <funclink>GetEffect</funclink>(&quot;*Fire*&quot;, obj, i))
    ChangeEffect(0, obj, i++, <funclink>GetEffect</funclink>(0, obj, index, 1), 2);</code>
        <text>Switches all fire into fast mode.</text>
      </example>
    </examples>
    <related>
      <emlink href="script/Effects.html">Effects Documentation</emlink>
      <funclink>AddEffect</funclink>
      <funclink>CheckEffect</funclink>
      <funclink>GetEffectCount</funclink>
      <funclink>EffectCall</funclink>
      <funclink>EffectVar</funclink>
      <funclink>GetEffect</funclink>
      <funclink>RemoveEffect</funclink>
    </related>
  </func>
  <author>Sven2</author><date>2004-03</date>
</funcs>
