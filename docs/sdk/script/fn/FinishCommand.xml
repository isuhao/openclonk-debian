<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE funcs
  SYSTEM '../../../clonk.dtd'>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<funcs>
  <func>
    <title>FinishCommand</title>
    <category>Objects</category>
    <subcat>Commands</subcat>
    <version>4.9.5.0 CE</version>
    <syntax>
      <rtype>bool</rtype>
      <params>
        <param>
          <type>bool</type>
          <name>success</name>
          <desc>Whether to evaluate the ended command as successful.</desc>
        </param>
        <param>
          <type>int</type>
          <name>command_num</name>
          <optional />
          <desc>Index of the command. 0 is the current command, other values indicate the following commands.</desc>
        </param>
      </params>
    </syntax>
    <desc>Ends a command in the command stack of an object.</desc>
    <examples>
      <example>
        <code>public func Production(object clonk)
{
  // Baum suchen
  <emlink href="script/NamedVar.html">var</emlink> tree;
  if (!(tree = FindWorkTree(clonk)))
  // Kein geeigneter Baum (fertig)
  {
	<funclink>Message</funclink>(&quot;$TxtNomoresuitabletrees$&quot;);
	clonk-&gt;FinishCommand(false, 1);
	return(0);
  }
[...]
}
        </code>
        <text>From the sawmill script: FinishCommand is used to inform the following (super-level) commands that automatic wood production has failed. Produktion() is called through a Call command which counts as successful if the function call could be made. That's why FinishCommand must be used.</text>
      </example>
    </examples>
    <related>
      <funclink>SetCommand</funclink>
      <funclink>GetCommand</funclink>
      <funclink>AppendCommand</funclink>
      <funclink>AddCommand</funclink>
    </related>
  </func>
  <author>GÃ¼nther</author><date>2004-04</date>
</funcs>
