<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE funcs
  SYSTEM '../../../clonk.dtd'>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<funcs>
  <func>
    <title>ResortObjects</title>
    <category>Objects</category>
    <subcat>Position</subcat>
    <version>4.9.1.0 GWE</version>
    <syntax>
      <rtype>bool</rtype>
      <params>
        <param>
          <type>string</type>
          <name>resort_func</name>
          <desc>Name of the function to be called for sorting.</desc>
        </param>
        <param>
          <type>int</type>
          <name>category</name>
          <desc>Object category to be resorted (e.g. <funclink>C4D_StaticBack</funclink>). 0 resorts all objects.</desc>
          <optional />
        </param>
      </params>
    </syntax>
    <desc>Resorts all objects or all objects of a given category internally. This is done through a simple sort algorithm which calls the specified function to determine the relation of two objects being compared. The two object references are passed in <funclink>Par</funclink>(0) and <funclink>Par</funclink>(1). If the first object is to be sorted before the second, the function should return a value less than zero. Otherwise, the function should return a value greater than or equal to zero.</desc>
    <remark>Internal sorting is not done immediately but at the end of the frame in which the function was called.</remark>
    <examples>
      <example>
        <code>  ResortObjects(&quot;ResortProc&quot;, <funclink>C4D_StaticBack</funclink>());

protected ResortProc: return(<funclink>GetMass</funclink>(<funclink>Par</funclink>(0))-<funclink>GetMass</funclink>(<funclink>Par</funclink>(1)));</code>
        <text>Sorts all C4D_StaticBack objects by weight (lighter objects in front).</text>
      </example>
    </examples>
    <related>
      <funclink>SetObjectOrder</funclink>
      <funclink>Resort</funclink>
    </related>
  </func>
  <author>Sven2</author><date>2001-11</date>
</funcs>
